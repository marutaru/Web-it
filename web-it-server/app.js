// Generated by CoffeeScript 1.4.0

/*
Module dependencies.
*/


(function() {
  var alljsonarr, app, exec, express, fs, http, json, path, routes, server, user, _;

  express = require('express');

  routes = require('./routes');

  user = require('./routes/user');

  http = require('http');

  path = require('path');

  app = express();

  _ = require('underscore');

  fs = require('fs');

  exec = require('child_process');

  app.configure(function() {
    app.set("port", process.env.PORT || 3000);
    app.set("views", __dirname + "/views");
    app.set("view engine", "jade");
    app.use(express.favicon());
    app.use(express.logger("dev"));
    app.use(express.bodyParser());
    app.use(express.methodOverride());
    app.use(app.router);
    return app.use(express["static"](path.join(__dirname, "public")));
  });

  app.configure("development", function() {
    return app.use(express.errorHandler());
  });

  alljsonarr = new Array();

  json = function(content, position_x, position_y, url) {
    return {
      content: content,
      position: {
        x: position_x,
        y: position_y
      },
      url: url
    };
  };

  alljsonarr.push(json("testjson", 45, 56, "all"));

  app.get("/getdata.json", function(req, res) {
    var data, sendjsonarr, _i, _len;
    res.header("Access-Control-Allow-Origin", "*");
    sendjsonarr = new Array();
    res.contentType('application/json;charset=UTF-8');
    for (_i = 0, _len = alljsonarr.length; _i < _len; _i++) {
      data = alljsonarr[_i];
      if (req.headers.referer === data.url) {
        sendjsonarr.push(data);
      }
    }
    return res.send(sendjsonarr);
  });

  app.get("/getall.json", function(req, res) {
    res.header("Access-Control-Allow-Origin", "*");
    res.contentType('application/json;charser=UTF-8');
    return res.send(alljsonarr);
  });

  app.post("/postdata.json", function(req, res) {
    console.log(req.body);
    alljsonarr.push(json(req.body.content, req.body.positionx, req.body.positiony, req.headers.referer));
    return res.redirect(req.headers.referer);
  });

  app.post("/deletedata.json", function(req, res) {
    console.log(req.body);
    return res.redirect(req.headers.referer);
  });

  server = http.createServer(app).listen(app.get("port"), function() {
    return console.log("Express server listening on port " + app.get("port"));
  });

}).call(this);
